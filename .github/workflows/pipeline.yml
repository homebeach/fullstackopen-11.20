name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-20.04
    concurrency: deploy-group

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Check style
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Setup Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy app to Fly.io
        if: ${{ github.event_name == 'push' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          MONGODB_URI: ${{ secrets.MONGODB_URI }}

  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-20.04
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(join(github.event.commits.*.message, ' '), '#skip') }}
    steps:
      - uses: actions/checkout@v4

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@f278d49d30cdd8775cc3e7dd00b5ee11686ee297
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Send success notification to Discord
        if: ${{ success() }}
        env:
          COMMIT_SHA: ${{ github.sha }}
          COMMITTER: ${{ github.actor }}
          REPO_NAME: ${{ github.repository }}
          BRANCH_NAME: ${{ github.ref_name }}
          WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        run: |
          MESSAGE="New version tagged and pushed: $REPO_NAME on branch $BRANCH_NAME for commit $COMMIT_SHA by $COMMITTER."
          curl -H "Content-Type: application/json" -d "{\"content\": \"$MESSAGE\"}" $WEBHOOK_URL
